<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ActuRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActuRepository extends EntityRepository
{

	public function findBySlugWithComments($slug){
		$qb = $this->createQueryBuilder('a');
		$query = $qb->where("a.slug = :slug")
					->andWhere("a.isPublished = 1")
					->leftJoin("a.comments", "c")
					->addSelect("c")
					->orderBy("c.dateCreated", "DESC")
					->setParameter("slug", $slug)
					->getQuery();

		$result = $query->getOneOrNullResult();
		return $result;
	}


	public function findHomeActus()
	{
		$qb = $this->createQueryBuilder("a");

		$query = $qb->where("a.isPublished = 1")
					->orderBy("a.datePublished", "DESC")
					->setMaxResults(10)
					->getQuery();

		return $query->getResult();
	}


	public function findPagedActus($page, $numPerPage = 10)
	{
		$qb = $this->createQueryBuilder("a");

		$query = $qb->orderBy("a.datePublished", "DESC")
					->setFirstResult( ($page-1)*$numPerPage )
					->setMaxResults( $numPerPage )
					->getQuery();

		$paginator = new Paginator($query);
		return $paginator;

	}

	public function countPublishedActus(){

		$qb = $this->createQueryBuilder("a");

		$query = $qb
					->select("count(a.id)")
					->where("a.isPublished = 1")
					->getQuery();

		return $query->getSingleScalarResult();
	}


}
	